{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UsuariosContex = createContext(undefined);\nexport function UsuariosProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    usuarios = _useState2[0],\n    setUsuarios = _useState2[1];\n  var adicionarUsuario = function adicionarUsuario(usuario) {\n    setUsuarios(function (prevUsuarios) {\n      return [].concat(_toConsumableArray(prevUsuarios), [usuario]);\n    });\n  };\n  return _jsx(UsuariosContex.Provider, {\n    value: {\n      usuarios: usuarios,\n      adicionarUsuario: adicionarUsuario\n    },\n    children: children\n  });\n}\nexport function useUsuarios() {\n  var context = useContext(UsuariosContex);\n  if (!context) {\n    console.log(context);\n    throw new Error('useUsuarios deve ser usado dentro de um UsuariosProvider');\n  }\n  return context;\n}","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","UsuariosContex","undefined","UsuariosProvider","_ref","children","_useState","_useState2","_slicedToArray","usuarios","setUsuarios","adicionarUsuario","usuario","prevUsuarios","concat","_toConsumableArray","Provider","value","useUsuarios","context","console","log","Error"],"sources":["C:/Users/joedersonOP/OneDrive/alura/sprint_2/src/context/UsuariosContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useContext, useState } from \"react\";\r\n\r\ninterface Usuario {\r\n    nome: string;\r\n    email: string;\r\n    senha: string;\r\n}\r\n\r\ninterface UsuariosContextData {\r\n    usuarios: Usuario[];\r\n    adicionarUsuario: (usuario:Usuario) => void;\r\n}\r\n\r\nconst UsuariosContex = createContext<UsuariosContextData | undefined>(undefined);\r\n\r\n\r\nexport function UsuariosProvider({ children }: { children: ReactNode }) {\r\n    const [usuarios, setUsuarios] = useState<Usuario[]>([]);\r\n\r\n    const adicionarUsuario = (usuario: Usuario) => {\r\n        setUsuarios((prevUsuarios) => [...prevUsuarios, usuario]);\r\n    };\r\n    return (\r\n        <UsuariosContex.Provider value={{ usuarios, adicionarUsuario }}>\r\n            {children}\r\n        </UsuariosContex.Provider>\r\n    );\r\n}\r\n\r\nexport function useUsuarios() {\r\n    const context = useContext(UsuariosContex);\r\n    if(!context) {\r\n        console.log(context)\r\n        throw new Error('useUsuarios deve ser usado dentro de um UsuariosProvider')\r\n    }\r\n    return context;\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAa9E,IAAMC,cAAc,GAAGL,aAAa,CAAkCM,SAAS,CAAC;AAGhF,OAAO,SAASC,gBAAgBA,CAAAC,IAAA,EAAwC;EAAA,IAArCC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EACvC,IAAAC,SAAA,GAAgCR,QAAQ,CAAY,EAAE,CAAC;IAAAS,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAhDG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,OAAgB,EAAK;IAC3CF,WAAW,CAAC,UAACG,YAAY;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAASF,YAAY,IAAED,OAAO;IAAA,CAAC,CAAC;EAC7D,CAAC;EACD,OACIZ,IAAA,CAACC,cAAc,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAER,QAAQ,EAARA,QAAQ;MAAEE,gBAAgB,EAAhBA;IAAiB,CAAE;IAAAN,QAAA,EAC1DA;EAAQ,CACY,CAAC;AAElC;AAEA,OAAO,SAASa,WAAWA,CAAA,EAAG;EAC1B,IAAMC,OAAO,GAAGtB,UAAU,CAACI,cAAc,CAAC;EAC1C,IAAG,CAACkB,OAAO,EAAE;IACTC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAM,IAAIG,KAAK,CAAC,0DAA0D,CAAC;EAC/E;EACA,OAAOH,OAAO;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}